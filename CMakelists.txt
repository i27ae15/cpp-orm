cmake_minimum_required(VERSION 3.10)

project(MyProject VERSION 1.0 LANGUAGES CXX)

# Set the C++ standard
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED True)

# Include directories and library paths for PostgreSQL
set(POSTGRESQL_INCLUDE_DIR "C:/Program Files/PostgreSQL/14/include")
set(POSTGRESQL_LIB_DIR "C:/Program Files/PostgreSQL/14/lib")

# Include directories for your project
include_directories(${PROJECT_SOURCE_DIR}/include)
include_directories("${POSTGRESQL_INCLUDE_DIR}")

# Add the main executable
add_executable(main
    src/main.cpp
    src/db/connection.cpp
    src/db/settings.cpp
    src/model/model.cpp
    src/model/fields.cpp
    src/model/result_iterator.cpp
    src/sql/helper.cpp
)

target_link_directories(main PRIVATE "${POSTGRESQL_LIB_DIR}")

target_link_libraries(main PRIVATE pq)

# **Google Test Integration**

# Option 1: Using FetchContent to download Google Test
include(FetchContent)

FetchContent_Declare(
  googletest
  URL https://github.com/google/googletest/archive/refs/tags/release-1.12.1.zip
)

# For Windows: Prevent overriding the parent project's compiler/linker settings
set(gtest_force_shared_crt ON CACHE BOOL "" FORCE)

FetchContent_MakeAvailable(googletest)

enable_testing()

# Add the test executable
add_executable(tests
    src/db/connection.cpp
    src/db/settings.cpp
    src/model/model.cpp
    src/model/fields.cpp
    src/model/result_iterator.cpp
    src/sql/helper.cpp
    # Explicetely files for tests
    src/tests/db_management.cpp
    src/tests/test_model.cpp
    src/tests/test_case.cpp
)

# Add the PostgreSQL library directory
target_link_directories(tests PRIVATE "${POSTGRESQL_LIB_DIR}")

target_link_libraries(tests
    PRIVATE
    gtest_main
    pq
)

target_include_directories(tests PRIVATE
    "${POSTGRESQL_INCLUDE_DIR}"
)


# Add the test
add_test(NAME RunTests COMMAND tests)

# Custom target to run tests
add_custom_target(run_tests
    COMMAND tests
    DEPENDS tests
    WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
    COMMENT "Running unit tests..."
)
